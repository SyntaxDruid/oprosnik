/**
 * form-modifier.js
 * –í–µ—Ä—Å–∏—è: 7.0
 *
 * –≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –º–æ–¥–∏—Ñ–∏—Ü–∏—Ä—É–µ—Ç —ç–ª–µ–º–µ–Ω—Ç—ã —Ñ–æ—Ä–º—ã –æ–ø—Ä–æ—Å–Ω–∏–∫–∞:
 * - –°–∫—Ä—ã–≤–∞–µ—Ç –Ω–µ–Ω—É–∂–Ω—ã–µ –ø–æ–ª—è
 * - –£–¥–∞–ª—è–µ—Ç –ª–∏—à–Ω–∏–µ –æ–ø—Ü–∏–∏ –∏–∑ –≤—ã–ø–∞–¥–∞—é—â–∏—Ö —Å–ø–∏—Å–∫–æ–≤
 * - –î–æ–±–∞–≤–ª—è–µ—Ç –∫–æ–Ω—Ç–µ–∫—Å—Ç–Ω—ã–µ –ø–æ–¥—Å–∫–∞–∑–∫–∏ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Ç–∏–ø–∞ –ø—Ä–æ–±–ª–µ–º—ã
 */
console.log('üöÄ Oprosnik Helper: Form Modifier Script v7.0 Loaded.');

// ===========================
// –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–Ø
// ===========================

// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –ø–æ–¥—Å–∫–∞–∑–æ–∫ (–∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è –∏–∑ JSON)
let hintsConfig = {
  hints: {
    type_id: {}
  },
  ui: {
    tooltip_styles: {
      hint_icon: {
        background_color: "#007bff",
        hover_color: "#0056b3",
        size: "20px"
      },
      comment_hint_icon: {
        background_color: "#1976d2",
        hover_color: "#1565c0",
        size: "20px"
      },
      tooltip_width: "320px",
      tooltip_background: "#333"
    }
  }
};

// –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
const CONFIG = {
  OPTIONS_TO_REMOVE: {
    'type_group': ['–ö–î–ì 1 –õ–¢–ü'],
    'type_id': [403, 334, 404, 405, 355, 373, 391, 388, 9, 375, 402, 337, 20, 21, 22, 24, 27, 338, 339, 340, 341, 371, 46, 342, 345,
                52, 53, 346, 33, 34, 35, 392, 37, 56, 349, 353, 44, 41, 381, 401, 356, 43, 378, 379, 382, 384, 394, 362, 369, 364, 365, 390, 370, 367, 399, 398, 67, 333, 335, 400]
  },
  INTERVALS: {
    OPTIONS_CLEANUP: 300,
    INITIAL_DELAY: 500
  }
};

// ===========================
// –§–£–ù–ö–¶–ò–ò –ó–ê–ì–†–£–ó–ö–ò –ò –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–ò
// ===========================

/**
 * –ó–∞–≥—Ä—É–∂–∞–µ—Ç –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –ø–æ–¥—Å–∫–∞–∑–æ–∫ –∏–∑ JSON —Ñ–∞–π–ª–∞
 */
async function loadHintsConfig() {
  try {
    const response = await fetch(chrome.runtime.getURL('hints-config.json'));
    if (response.ok) {
      hintsConfig = await response.json();
      console.log('‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –ø–æ–¥—Å–∫–∞–∑–æ–∫ –∑–∞–≥—Ä—É–∂–µ–Ω–∞ –∏–∑ JSON');
    } else {
      console.warn('‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –ø–æ–¥—Å–∫–∞–∑–æ–∫, –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤—Å—Ç—Ä–æ–µ–Ω–Ω–∞—è');
    }
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –ø–æ–¥—Å–∫–∞–∑–æ–∫:', error);
  }
}

/**
 * –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —Å—Ç–∏–ª–∏ –¥–ª—è –ø–æ–¥—Å–∫–∞–∑–æ–∫ –Ω–∞ –æ—Å–Ω–æ–≤–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
 */
function generateTooltipStyles() {
  const config = hintsConfig.ui.tooltip_styles;
  return `
    <style>
      /* –ê–Ω–∏–º–∞—Ü–∏–∏ */
      @keyframes slideIn {
        from {
          opacity: 0;
          transform: translateX(-10px);
        }
        to {
          opacity: 1;
          transform: translateX(0);
        }
      }
      
      @keyframes fadeIn {
        from {
          opacity: 0;
          transform: translateY(5px);
        }
        to {
          opacity: 1;
          transform: translateY(0);
        }
      }
      
      /* –ü–æ–¥—Å–∫–∞–∑–∫–∞ —Ä—è–¥–æ–º —Å –≤—ã–ø–∞–¥–∞—é—â–∏–º —Å–ø–∏—Å–∫–æ–º */
      .oprosnik-hint-container {
        position: absolute;
        left: calc(100% + 15px);
        top: 50%;
        transform: translateY(-50%);
        z-index: 100;
        animation: slideIn 0.3s ease-out;
      }
      
      .oprosnik-hint-display {
        background: linear-gradient(135deg, #e8f4fd 0%, #f3f9ff 100%);
        border: 1px solid #1976d2;
        border-radius: 8px;
        padding: 10px 14px;
        font-size: 13px;
        color: #0d47a1;
        line-height: 1.5;
        box-shadow: 0 3px 8px rgba(25, 118, 210, 0.15);
        max-width: 350px;
        white-space: normal;
        position: relative;
        font-weight: 500;
      }
      
      /* –°—Ç—Ä–µ–ª–∫–∞ –¥–ª—è –ø–æ–¥—Å–∫–∞–∑–∫–∏ */
      .oprosnik-hint-display::before {
        content: '';
        position: absolute;
        left: -6px;
        top: 50%;
        transform: translateY(-50%);
        width: 0;
        height: 0;
        border-top: 6px solid transparent;
        border-bottom: 6px solid transparent;
        border-right: 6px solid #1976d2;
      }
      
      .oprosnik-hint-display::after {
        content: '';
        position: absolute;
        left: -5px;
        top: 50%;
        transform: translateY(-50%);
        width: 0;
        height: 0;
        border-top: 5px solid transparent;
        border-bottom: 5px solid transparent;
        border-right: 5px solid #e8f4fd;
      }
      
      /* –ü–æ–¥—Å–∫–∞–∑–∫–∏ –ø–æ–¥ –ø–æ–ª–µ–º –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è */
      .oprosnik-comment-hint {
        background: linear-gradient(135deg, #e3f2fd 0%, #f0f7ff 100%);
        border: 1px solid #1976d2;
        border-radius: 10px;
        padding: 14px 18px;
        margin-top: 12px;
        font-size: 13px;
        color: #0d47a1;
        display: block;
        position: relative;
        box-shadow: 0 4px 12px rgba(25, 118, 210, 0.12);
        animation: fadeIn 0.3s ease-out;
        transition: all 0.2s ease;
      }
      
      .oprosnik-comment-hint:hover {
        box-shadow: 0 6px 16px rgba(25, 118, 210, 0.18);
        transform: translateY(-1px);
      }
      
      .oprosnik-comment-hint strong {
        font-weight: 600;
        color: #1565c0;
        display: inline-flex;
        align-items: center;
        margin-right: 6px;
      }
      
      /* –ò–∫–æ–Ω–∫–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ */
      .oprosnik-comment-hint strong::before {
        content: '‚Ñπ';
        display: inline-flex;
        align-items: center;
        justify-content: center;
        width: 18px;
        height: 18px;
        background-color: #1976d2;
        color: white;
        border-radius: 50%;
        font-size: 12px;
        font-weight: normal;
        margin-right: 6px;
      }
      
      /* –ê–¥–∞–ø—Ç–∏–≤–Ω–æ—Å—Ç—å –¥–ª—è –º–∞–ª–µ–Ω—å–∫–∏—Ö —ç–∫—Ä–∞–Ω–æ–≤ */
      @media (max-width: 1200px) {
        .oprosnik-hint-container {
          position: static;
          transform: none;
          margin-top: 8px;
          margin-left: 0;
        }
        
        .oprosnik-hint-display {
          max-width: 100%;
        }
        
        .oprosnik-hint-display::before,
        .oprosnik-hint-display::after {
          display: none;
        }
      }
      
      /* –ü–ª–∞–≤–Ω–∞—è –∞–Ω–∏–º–∞—Ü–∏—è –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –ø–æ–¥—Å–∫–∞–∑–æ–∫ */
      .oprosnik-hint-container.fade-out {
        animation: fadeOut 0.2s ease-out forwards;
      }
      
      @keyframes fadeOut {
        to {
          opacity: 0;
          transform: translateX(-5px);
        }
      }
    </style>
  `;
}

/**
 * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç —Å—Ç–∏–ª–∏ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ
 */
function initializeStyles() {
  if (!document.getElementById('oprosnik-hint-styles')) {
    const styleElement = document.createElement('div');
    styleElement.id = 'oprosnik-hint-styles';
    styleElement.innerHTML = generateTooltipStyles();
    document.head.appendChild(styleElement);
    console.log('üé® –°—Ç–∏–ª–∏ –ø–æ–¥—Å–∫–∞–∑–æ–∫ –¥–æ–±–∞–≤–ª–µ–Ω—ã');
  }
}

// ===========================
// –§–£–ù–ö–¶–ò–ò –ú–û–î–ò–§–ò–ö–ê–¶–ò–ò –§–û–†–ú–´
// ===========================

/**
 * –°–∫—Ä—ã–≤–∞–µ—Ç –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä —Å –ø–æ–ª–µ–º "–î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∑–≤–æ–Ω–∫–∞"
 */
function hideCallDurationElement() {
  const callDurationSelect = document.getElementById('call_duration_id');
  if (callDurationSelect) {
    const callDurationContainer = callDurationSelect.closest('.row');
    if (callDurationContainer) {
      callDurationContainer.style.display = 'none';
      console.log('‚úÖ –≠–ª–µ–º–µ–Ω—Ç "–î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∑–≤–æ–Ω–∫–∞" —Å–∫—Ä—ã—Ç');
    }
  }
}

/**
 * –£–¥–∞–ª—è–µ—Ç —É–∫–∞–∑–∞–Ω–Ω—ã–µ –æ–ø—Ü–∏–∏ –∏–∑ –≤—ã–ø–∞–¥–∞—é—â–∏—Ö —Å–ø–∏—Å–∫–æ–≤
 * @param {Object} selectors - –û–±—ä–µ–∫—Ç —Å id —Å–µ–ª–µ–∫—Ç–æ—Ä–æ–≤ –∏ –º–∞—Å—Å–∏–≤–∞–º–∏ –∑–Ω–∞—á–µ–Ω–∏–π –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è
 */
function removeSpecificOptions(selectors) {
  let removedCount = 0;
  
  for (const selectId in selectors) {
    if (Object.prototype.hasOwnProperty.call(selectors, selectId)) {
      const selectElement = document.getElementById(selectId);
      if (selectElement) {
        const valuesToRemove = selectors[selectId];
        valuesToRemove.forEach(value => {
          const optionToRemove = selectElement.querySelector(`option[value="${value}"]`);
          if (optionToRemove) {
            optionToRemove.remove();
            removedCount++;
          }
        });
      }
    }
  }
  
  if (removedCount > 0) {
    console.log(`üóëÔ∏è –£–¥–∞–ª–µ–Ω–æ ${removedCount} –æ–ø—Ü–∏–π`);
  }
}

// ===========================
// –§–£–ù–ö–¶–ò–ò –†–ê–ë–û–¢–´ –° –ü–û–î–°–ö–ê–ó–ö–ê–ú–ò
// ===========================

/**
 * –°–æ–∑–¥–∞–µ—Ç —ç–ª–µ–º–µ–Ω—Ç –ø–æ–¥—Å–∫–∞–∑–∫–∏
 * @param {string} hint - –¢–µ–∫—Å—Ç –ø–æ–¥—Å–∫–∞–∑–∫–∏
 * @returns {HTMLElement} - DOM —ç–ª–µ–º–µ–Ω—Ç –ø–æ–¥—Å–∫–∞–∑–∫–∏
 */
function createHintElement(hint) {
  const container = document.createElement('div');
  container.className = 'oprosnik-hint-container';
  container.innerHTML = `
    <div class="oprosnik-hint-display">${hint}</div>
  `;
  return container;
}

/**
 * –î–æ–±–∞–≤–ª—è–µ—Ç –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–µ –ø–æ–¥—Å–∫–∞–∑–∫–∏ –¥–ª—è –ø–æ–ª—è type_id
 */
function addTypeIdHint() {
  const typeIdSelect = document.getElementById('type_id');
  if (!typeIdSelect) {
    console.warn('‚ö†Ô∏è –≠–ª–µ–º–µ–Ω—Ç type_id –Ω–µ –Ω–∞–π–¥–µ–Ω');
    return;
  }
  
  const typeIdContainer = typeIdSelect.closest('.input-group');
  if (!typeIdContainer) {
    console.warn('‚ö†Ô∏è –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è type_id –Ω–µ –Ω–∞–π–¥–µ–Ω');
    return;
  }
  
  // –î–µ–ª–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–æ –ø–æ–∑–∏—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–º –¥–ª—è –∞–±—Å–æ–ª—é—Ç–Ω—ã—Ö –ø–æ–¥—Å–∫–∞–∑–æ–∫
  typeIdContainer.style.position = 'relative';
  
  // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏–∑–º–µ–Ω–µ–Ω–∏—è
  typeIdSelect.addEventListener('change', function() {
    const selectedValue = this.value;
    const hintData = hintsConfig.hints.type_id[selectedValue];
    
    // –ù–∞—Ö–æ–¥–∏–º —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é –ø–æ–¥—Å–∫–∞–∑–∫—É
    const existingHint = typeIdContainer.querySelector('.oprosnik-hint-container');
    
    if (existingHint) {
      // –î–æ–±–∞–≤–ª—è–µ–º –∫–ª–∞—Å—Å –¥–ª—è –∞–Ω–∏–º–∞—Ü–∏–∏ –∏—Å—á–µ–∑–Ω–æ–≤–µ–Ω–∏—è
      existingHint.classList.add('fade-out');
      setTimeout(() => existingHint.remove(), 200);
    }
    
    // –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—É—é –ø–æ–¥—Å–∫–∞–∑–∫—É, –µ—Å–ª–∏ –µ—Å—Ç—å –¥–∞–Ω–Ω—ã–µ
    if (hintData && selectedValue !== '0') {
      setTimeout(() => {
        const hintElement = createHintElement(hintData.hint1);
        typeIdContainer.appendChild(hintElement);
      }, existingHint ? 250 : 0);
      
      // –û–±–Ω–æ–≤–ª—è–µ–º –ø–æ–¥—Å–∫–∞–∑–∫–∏ –≤ –ø–æ–ª–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è
      updateCommentHints(hintData);
    } else {
      updateCommentHints(null);
    }
  });
  
  console.log('‚úÖ –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–æ–¥—Å–∫–∞–∑–æ–∫ –¥–ª—è type_id –¥–æ–±–∞–≤–ª–µ–Ω');
}

/**
 * –û–±–Ω–æ–≤–ª—è–µ—Ç –ø–æ–¥—Å–∫–∞–∑–∫–∏ –ø–æ–¥ –ø–æ–ª–µ–º –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è
 * @param {Object|null} hintData - –î–∞–Ω–Ω—ã–µ –ø–æ–¥—Å–∫–∞–∑–æ–∫ –∏–ª–∏ null
 */
function updateCommentHints(hintData) {
  const commentTextarea = document.getElementById('comment_');
  if (!commentTextarea) return;
  
  // –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ –ø–æ–¥—Å–∫–∞–∑–∫–∏ —Å –∞–Ω–∏–º–∞—Ü–∏–µ–π
  removeAllCommentHints();
  
  if (hintData && hintData.hint2) {
    // –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—É—é –ø–æ–¥—Å–∫–∞–∑–∫—É —Å –Ω–µ–±–æ–ª—å—à–æ–π –∑–∞–¥–µ—Ä–∂–∫–æ–π –¥–ª—è –∞–Ω–∏–º–∞—Ü–∏–∏
    setTimeout(() => {
      addCommentHint('oprosnik-comment-hint-1', hintData.hint2, '–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:', '8px');
    }, 100);
  }
}

/**
 * –î–æ–±–∞–≤–ª—è–µ—Ç –ø–æ–¥—Å–∫–∞–∑–∫—É –ø–æ–¥ –ø–æ–ª–µ–º –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è
 * @param {string} id - ID —ç–ª–µ–º–µ–Ω—Ç–∞ –ø–æ–¥—Å–∫–∞–∑–∫–∏
 * @param {string} hintText - –¢–µ–∫—Å—Ç –ø–æ–¥—Å–∫–∞–∑–∫–∏
 * @param {string} label - –ó–∞–≥–æ–ª–æ–≤–æ–∫ –ø–æ–¥—Å–∫–∞–∑–∫–∏
 * @param {string} marginTop - –û—Ç—Å—Ç—É–ø —Å–≤–µ—Ä—Ö—É
 */
function addCommentHint(id, hintText, label, marginTop) {
  const commentTextarea = document.getElementById('comment_');
  if (!commentTextarea) return;
  
  // –ù–∞—Ö–æ–¥–∏–º —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–∏–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä textarea
  const textareaContainer = commentTextarea.closest('.row');
  if (!textareaContainer) return;
  
  // –°–æ–∑–¥–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç –ø–æ–¥—Å–∫–∞–∑–∫–∏
  const hintElement = document.createElement('div');
  hintElement.id = id;
  hintElement.className = 'oprosnik-comment-hint';
  hintElement.style.marginTop = marginTop;
  hintElement.style.width = '100%';
  
  hintElement.innerHTML = `<strong>${label}</strong> ${hintText}`;
  
  // –î–æ–±–∞–≤–ª—è–µ–º –ø–æ—Å–ª–µ textarea
  textareaContainer.parentNode.insertBefore(hintElement, textareaContainer.nextSibling);
}

/**
 * –£–¥–∞–ª—è–µ—Ç –≤—Å–µ –ø–æ–¥—Å–∫–∞–∑–∫–∏ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤ —Å –∞–Ω–∏–º–∞—Ü–∏–µ–π
 */
function removeAllCommentHints() {
  const hints = document.querySelectorAll('.oprosnik-comment-hint');
  hints.forEach(hint => {
    hint.style.opacity = '0';
    hint.style.transform = 'translateY(-5px)';
    setTimeout(() => hint.remove(), 200);
  });
}

// ===========================
// –ì–õ–ê–í–ù–ê–Ø –§–£–ù–ö–¶–ò–Ø –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–ò
// ===========================

/**
 * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç –≤—Å–µ –º–æ–¥–∏—Ñ–∏–∫–∞—Ü–∏–∏ —Ñ–æ—Ä–º—ã
 */
async function initializeAll() {
  console.log('üîß –ù–∞—á–∞–ª–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –º–æ–¥–∏—Ñ–∏–∫–∞—Ü–∏–π —Ñ–æ—Ä–º—ã...');
  
  try {
    // 1. –ó–∞–≥—Ä—É–∂–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –ø–æ–¥—Å–∫–∞–∑–æ–∫
    await loadHintsConfig();
    
    // 2. –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Å—Ç–∏–ª–∏
    initializeStyles();
    
    // 3. –°–∫—Ä—ã–≤–∞–µ–º –Ω–µ–Ω—É–∂–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã —Ñ–æ—Ä–º—ã
    hideCallDurationElement();
    
    // 4. –£–¥–∞–ª—è–µ–º –Ω–µ–Ω—É–∂–Ω—ã–µ –æ–ø—Ü–∏–∏ –∏–∑ type_group
    removeSpecificOptions({ 'type_group': CONFIG.OPTIONS_TO_REMOVE.type_group });
    
    // 5. –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–æ–¥—Å–∫–∞–∑–æ–∫ —Å –∑–∞–¥–µ—Ä–∂–∫–æ–π
    setTimeout(addTypeIdHint, CONFIG.INTERVALS.INITIAL_DELAY);
    
    // 6. –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∏–Ω—Ç–µ—Ä–≤–∞–ª –¥–ª—è –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–æ–π –æ—á–∏—Å—Ç–∫–∏ –æ–ø—Ü–∏–π type_id
    setInterval(() => {
      removeSpecificOptions({ 'type_id': CONFIG.OPTIONS_TO_REMOVE.type_id });
    }, CONFIG.INTERVALS.OPTIONS_CLEANUP);
    
    console.log('‚úÖ –í—Å–µ –º–æ–¥–∏—Ñ–∏–∫–∞—Ü–∏–∏ —Ñ–æ—Ä–º—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–º–µ–Ω–µ–Ω—ã!');
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏:', error);
  }
}

// ===========================
// –ó–ê–ü–£–°–ö –°–ö–†–ò–ü–¢–ê
// ===========================

// –ñ–¥–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ DOM
if (document.readyState === 'loading') {
  document.addEventListener('DOMContentLoaded', initializeAll);
} else {
  // DOM —É–∂–µ –∑–∞–≥—Ä—É–∂–µ–Ω, –∑–∞–ø—É—Å–∫–∞–µ–º —Å—Ä–∞–∑—É
  initializeAll();
}